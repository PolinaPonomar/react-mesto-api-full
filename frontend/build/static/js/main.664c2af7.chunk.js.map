{"version":3,"sources":["utils/auth.js","utils/api.js","contexts/CurrentUserContext.js","components/ProtectedRoute.js","components/MenuPopup.js","images/logo.svg","components/Header.js","components/Card.js","components/Main.js","components/Footer.js","components/Login.js","components/Register.js","images/ok_icon.svg","images/error_icon.svg","components/InfoTooltip.js","components/PopupWithForm.js","components/EditAvatarPopup.js","components/EditProfilePopup.js","components/AddPlacePopup.js","components/ImagePopup.js","components/App.js","index.js"],"names":["BASE_URL","checkResponse","res","ok","json","Promise","reject","status","api","config","this","_url","url","headers","fetch","method","then","_onError","inputs","body","JSON","stringify","name","about","cardData","link","cardId","input","avatar","authorization","CurrentUserContext","React","createContext","ProtectedRoute","Component","component","props","loggedIn","to","MenuPopup","className","isOpen","email","onClick","onSignOut","Header","location","useLocation","pathname","text","src","logo","alt","isMenuPopupOpen","onCloseMenuPopup","onOpenMenuPopup","Card","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","liker","cardLikeButtonClassName","style","backgroundImage","onCardClick","type","aria-label","onCardLike","length","onCardDelete","Main","onEditAvatar","onEditProfile","onAddPlace","cards","map","item","Footer","Login","useState","password","setPassword","setEmail","onSubmit","event","preventDefault","onLogin","noValidate","id","value","onChange","target","required","placeholder","Register","onRegister","InfoTooltip","onClose","isRegistrationSuccessful","okIcon","errorIcon","PopupWithForm","title","children","EditAvatarPopup","inputRef","useRef","useEffect","current","onUpdateAvatar","ref","EditProfilePopup","setName","description","setDescription","onUpdateUser","minLength","maxLength","AddPlacePopup","setLink","ImagePopup","App","history","useHistory","setCurrentUser","setLoggedIn","isInfoTooltipOpen","setIsInfoTooltipOpen","setRegistrationSuccessful","setIsMenuPopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","setCards","all","getUserInfo","getInitialCards","dataUserInfo","dataCards","catch","err","console","log","tokenCheck","closeAllPopups","localStorage","getItem","jwt","token","data","push","handleSignOut","removeItem","Provider","exact","path","deleteLike","newCard","state","putLike","deleteCard","answer","filter","auth","setItem","inputAvatar","changeAvatar","updateUser","setUserInfo","postNewCard","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.664c2af7.chunk.js","sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\r\n\r\nconst checkResponse = (res) => {\r\n    if(res.ok) {\r\n        return res.json()\r\n    } \r\n    return Promise.reject(`Ошибка: ${res.status}`) \r\n}\r\n\r\nexport const register = ({password, email}) => {\r\n    return fetch(`${BASE_URL}/signup`, {\r\n        method: 'POST',\r\n        headers: {\r\n        'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n        password: password,\r\n        email: email,\r\n        })\r\n    })\r\n    .then(checkResponse)\r\n};\r\n\r\nexport const authorize = ({password, email}) => {\r\n    return fetch(`${BASE_URL}/signin`, {\r\n        method: 'POST',\r\n        headers: {\r\n        'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n        password: password,\r\n        email: email,\r\n        })\r\n    })\r\n    .then(checkResponse)\r\n};\r\n\r\nexport const getContent = (token) => {\r\n    return fetch(`${BASE_URL}/users/me`, {\r\n        method: 'GET',\r\n        headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`,\r\n        }\r\n    })\r\n    .then(checkResponse)\r\n};\r\n","class Api {\r\n    constructor(config) {\r\n        this._url = config.url;\r\n        this.headers = config.headers;\r\n    }\r\n    \r\n    _onError (res) {\r\n        if(res.ok){\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`)\r\n    }\r\n\r\n    getUserInfo () {\r\n        return fetch(`${this._url}users/me`, {\r\n            method: 'GET',\r\n            headers: this.headers\r\n        })\r\n        .then(this._onError)\r\n    }\r\n\r\n    getInitialCards () {\r\n        return fetch(`${this._url}cards`, {\r\n            method: 'GET',\r\n            headers: this.headers\r\n        })\r\n        .then(this._onError)\r\n    }\r\n\r\n    setUserInfo (inputs) {\r\n        return fetch(`${this._url}users/me`, {\r\n            method: 'PATCH',\r\n            headers: this.headers,\r\n            body: JSON.stringify({\r\n                name: inputs.name,\r\n                about: inputs.about\r\n            })\r\n        })\r\n        .then(this._onError)\r\n    }\r\n\r\n    postNewCard (cardData) {\r\n        return fetch(`${this._url}cards`, {\r\n            method: 'POST',\r\n            headers: this.headers,\r\n            body: JSON.stringify({\r\n                name: cardData.name,\r\n                link: cardData.link,\r\n            })\r\n        })\r\n        .then(this._onError)\r\n    }\r\n\r\n    deleteCard (cardId) {\r\n        return fetch(`${this._url}cards/${cardId}`, {\r\n            method: 'DELETE',\r\n            headers: this.headers,\r\n        })\r\n        .then(this._onError)\r\n    }\r\n\r\n    putLike (cardId) {\r\n        return fetch(`${this._url}cards/likes/${cardId}`, {\r\n            method: 'PUT',\r\n            headers: this.headers,\r\n        })\r\n        .then(this._onError)\r\n    }\r\n\r\n    deleteLike (cardId) {\r\n        return fetch(`${this._url}cards/likes/${cardId}`, {\r\n            method: 'DELETE',\r\n            headers: this.headers,\r\n        })\r\n        .then(this._onError)\r\n    }\r\n\r\n    changeAvatar (input) {\r\n        return fetch(`${this._url}users/me/avatar`, {\r\n            method: 'PATCH',\r\n            headers: this.headers,\r\n            body: JSON.stringify({\r\n                avatar: input.avatar\r\n            })\r\n        })\r\n        .then(this._onError)\r\n    }\r\n}\r\n\r\nconst api = new Api({\r\n    url: 'https://mesto.nomoreparties.co/v1/cohort-20/',\r\n    headers: {\r\n        authorization: '4ea02280-fa61-4e20-88ce-aa4e93f95126',\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\nexport {api};\r\n","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();\r\n","import { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({ component: Component, ...props }) => {\r\n    return (\r\n      <Route>\r\n        {() =>\r\n          props.loggedIn ? <Component {...props} /> : <Redirect to=\"./sign-in\" />\r\n        }\r\n      </Route>\r\n    );\r\n  };\r\n  \r\n  export default ProtectedRoute;\r\n","import { Link} from 'react-router-dom';\r\n\r\nfunction MenuPopup(props) {\r\n\r\n    return (\r\n        <div className={`navbar__popup-menu ${props.isOpen && 'navbar__popup-menu_opened' }`}>\r\n            <p className=\"navbar__email navbar__email_visible\">{props.email}</p>\r\n            <Link to=\"\" onClick={props.onSignOut} className=\"navbar__link navbar__link_visible navbar__link_popup-menu\">Выйти</Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MenuPopup;\r\n","export default __webpack_public_path__ + \"static/media/logo.be5c04b7.svg\";","import { Link, useLocation } from 'react-router-dom';\r\nimport logo from '../images/logo.svg';\r\n\r\nfunction Header(props) {\r\n    const location = useLocation().pathname; // определяем, на какой странице находимся\r\n    const text = (location === \"/sign-in\") ? \"Регистрация\" : \"Войти\";\r\n    const link = (location === \"/sign-in\") ? \"/sign-up\" : \"/sign-in\";\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <img className=\"header__logo\" src={logo} alt=\"Логотип сайта\"/>\r\n            <nav className=\"navbar\">\r\n                {props.loggedIn ?\r\n                    (<>\r\n                        {!props.isMenuPopupOpen ?\r\n                            (<button className=\"navbar__open-menu-button\" onClick={props.onOpenMenuPopup}></button>)\r\n                        :   (<button className=\"navbar__close-menu-button\" onClick={props.onCloseMenuPopup}></button>)\r\n                        }\r\n                        <p className=\"navbar__email\">{props.email}</p>\r\n                        <Link to=\"\" onClick={props.onSignOut} className=\"navbar__link\">Выйти</Link>\r\n                    </>) \r\n                : (<Link to={link} className=\"navbar__link navbar__link_visible\">{text}</Link>)\r\n                }\r\n            </nav>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import { useContext } from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Card(props) {\r\n    // Подписка на контекст информации о юзере\r\n    const currentUser = useContext(CurrentUserContext);\r\n\r\n    // Определяем, являемся ли мы владельцем текущей карточки\r\n    const isOwn = props.card.owner._id === currentUser._id;\r\n    // Создаём переменную, которую после зададим в `className` для кнопки удаления\r\n    const cardDeleteButtonClassName = `card__delete-button ${isOwn && 'card__delete-button_visible'}`;\r\n\r\n    // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n    const isLiked = props.card.likes.some(liker => liker._id === currentUser._id);\r\n    // Создаём переменную, которую после зададим в `className` для кнопки лайка\r\n    const cardLikeButtonClassName = `card__like-button ${isLiked && 'card__like-button_active'}`; \r\n    \r\n\r\n    function handleClick() { //При клике на карточку в конечном счете сработает handleCardClick из компонента App\r\n        props.onCardClick(props.card); // (handleCardClick \"проброшен\" пропсом onCardClick из App через Main сюда)\r\n    }\r\n    function handleLikeClick() {\r\n        props.onCardLike(props.card);\r\n    }\r\n    function handleDeleteClick() {\r\n        props.onCardDelete(props.card);\r\n    }  \r\n\r\n    return (\r\n        <article className=\"card\">\r\n            <div className=\"card__photo\" style={{ backgroundImage: `url(${props.card.link})` }} onClick={handleClick}/>\r\n            <div className=\"card__photo-info\">\r\n                <h2 className=\"card__text\">{props.card.name}</h2>\r\n                <div className=\"card__like-container\">\r\n                    <button type=\"button\" aria-label=\"like\" className={cardLikeButtonClassName} onClick={handleLikeClick}></button>\r\n                    <p className=\"card__likes-number\">{props.card.likes.length}</p>\r\n                </div>\r\n            </div>\r\n            <button type=\"button\" aria-label=\"delete\" className={cardDeleteButtonClassName} onClick={handleDeleteClick}></button>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default Card;\r\n","import { useContext } from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport Card from './Card';\r\n\r\nfunction Main(props) {\r\n    // подписка на контекст информации о юзере\r\n    const currentUser = useContext(CurrentUserContext);\r\n   \r\n    return (\r\n        <main className=\"content\">\r\n\r\n            <section className=\"profile\">\r\n                <div className=\"profile__avatar-wrapper\" onClick={props.onEditAvatar}>\r\n                    <div className=\"profile__avatar\" style={{ backgroundImage: `url(${currentUser.avatar})` }}></div>\r\n                    <div className=\"profile__avatar-change\"></div>\r\n                </div>\r\n                <div className=\"profile__info\">\r\n                    <div className=\"profile__info-edit\">\r\n                        <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n                        <button type=\"button\" aria-label=\"edit\" className=\"profile__edit-button\" onClick={props.onEditProfile}></button>\r\n                    </div>\r\n                    <p className=\"profile__description\">{currentUser.about}</p>\r\n                </div>\r\n                <button type=\"button\" aria-label=\"add\" className=\"profile__add-button\" onClick={props.onAddPlace}></button>\r\n            </section>\r\n\r\n            <section className=\"cards\">\r\n                {\r\n                    props.cards.map(item => ( // jsx оборачиваем в скобки, чтобы избежать проблем с автоматической вставкой точек с запятой\r\n                        <Card card={item} key={item._id} onCardClick={props.onCardClick} onCardLike={props.onCardLike} onCardDelete={props.onCardDelete}/> //Обязательно передается key, т.к. каждая карточка - элемент списка карточек\r\n                    )\r\n                    )\r\n                }\r\n            </section>\r\n\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Main;\r\n","function Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className = \"footer__author\">&copy; 2020. Пономарева Полина</p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import { useState} from 'react';\r\n\r\nfunction Login(props) {\r\n    const [password, setPassword] = useState('');\r\n    const [email, setEmail] = useState(''); \r\n\r\n    function handleChangePassword (event) {\r\n        setPassword(event.target.value);\r\n    }\r\n\r\n    function handleChangeEmail (event) {\r\n        setEmail(event.target.value);\r\n    }\r\n\r\n    function handleSubmit (event) {\r\n        event.preventDefault();\r\n        // Передаём значения управляемых компонентов во внешний обработчик\r\n        props.onLogin({password, email});\r\n    }\r\n\r\n    return (\r\n        <form className=\"form\" onSubmit={handleSubmit} noValidate>\r\n            <h2 className=\"form__header form__header_type_enter-page\">Вход</h2>\r\n            <input id=\"email-input\" type=\"email\" value={email} onChange={handleChangeEmail} className=\"form__item form__item_type_enter-page\" name=\"email\" required placeholder=\"Email\"/>\r\n            <span id=\"email-input-error\" className=\"form__item-error\"></span>\r\n            <input id=\"password-input\" type=\"password\" value={password} onChange={handleChangePassword} className=\"form__item form__item_type_enter-page\" name=\"password\" required placeholder=\"Пароль\"/>\r\n            <span id=\"password-input-error\" className=\"form__item-error\"></span>\r\n            <button type=\"submit\" className=\"form__save-button form__save-button_type_enter-page\">Войти</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import { useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Register(props) {\r\n    const [password, setPassword] = useState('');\r\n    const [email, setEmail] = useState(''); \r\n\r\n    function handleChangePassword (event) {\r\n        setPassword(event.target.value);\r\n    }\r\n    function handleChangeEmail (event) {\r\n        setEmail(event.target.value);\r\n    }\r\n\r\n    function handleSubmit (event) {\r\n        event.preventDefault();\r\n        // Передаём значения управляемых компонентов во внешний обработчик\r\n        props.onRegister({password, email});\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form className=\"form\" onSubmit={handleSubmit} noValidate>\r\n                <h2 className=\"form__header form__header_type_enter-page\">Регистрация</h2>\r\n                <input id=\"email-input\" type=\"email\" value={email} onChange={handleChangeEmail} className=\"form__item form__item_type_enter-page\" name=\"email\" required placeholder=\"Email\"/>\r\n                <span id=\"email-input-error\" className=\"form__item-error\"></span>\r\n                <input id=\"password-input\" type=\"password\" value={password} onChange={handleChangePassword} className=\"form__item form__item_type_enter-page\" name=\"password\" required placeholder=\"Пароль\"/>\r\n                <span id=\"password-input-error\" className=\"form__item-error\"></span>\r\n                <button type=\"submit\" className=\"form__save-button form__save-button_type_enter-page\">Зарегистрироваться</button>\r\n            </form>\r\n            <div className=\"redirection\">\r\n                <p className=\"redirection__text\">Уже зарегистрированы?&nbsp;</p>\r\n                <Link to=\"/sign-in\" className=\"redirection__link\">Войти</Link>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Register;\r\n","export default __webpack_public_path__ + \"static/media/ok_icon.a9eb6caf.svg\";","export default __webpack_public_path__ + \"static/media/error_icon.d0f413bf.svg\";","import okIcon from'../images/ok_icon.svg';\r\nimport errorIcon from'../images/error_icon.svg';\r\n\r\nfunction InfoTooltip(props) {\r\n    return (\r\n        <div className={`popup popup_type_tip ${props.isOpen && 'popup_opened'}`}>\r\n            <div className=\"popup__container\">\r\n                <button type=\"button\" aria-label=\"close\" className=\"popup__close-button popup__close-button_type_tip\" onClick={props.onClose}></button>\r\n                <div className=\"popup__form-background popup__form-background_type_tip\">\r\n                    {props.isRegistrationSuccessful ?\r\n                        (<>\r\n                            <div className=\"popup__tip-icon\" style={{ backgroundImage: `url(${okIcon})` }}></div>\r\n                            <p className=\"popup__tip-text\">Вы успешно зарегистрировались!</p>\r\n                        </>)\r\n                    :   (<>\r\n                            <div className=\"popup__tip-icon\" style={{ backgroundImage: `url(${errorIcon})` }}></div>\r\n                            <p className=\"popup__tip-text\">Что-то пошло не так! Попробуйте ещё раз.</p>\r\n                        </>)\r\n                }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InfoTooltip;\r\n","function PopupWithForm(props) {\r\n    return (\r\n        <div className={`popup popup_type_${props.name} ${props.isOpen && 'popup_opened'}`}>\r\n            <div className=\"popup__container\">\r\n                <button type=\"button\" aria-label=\"close\" className=\"popup__close-button\" onClick={props.onClose}></button>\r\n                <div className=\"popup__form-background\">\r\n                    <form className=\"form\" name={`${props.name}-form`} onSubmit={props.onSubmit} noValidate>\r\n                        <h2 className=\"form__header\">{props.title}</h2>\r\n                        {props.children}\r\n                        <button type=\"submit\" className=\"form__save-button\">Сохранить</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PopupWithForm;\r\n","import { useRef, useEffect } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditAvatarPopup(props) {\r\n    const inputRef = useRef();\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        props.onUpdateAvatar({\r\n          avatar: inputRef.current.value,\r\n        });\r\n    }\r\n\r\n    useEffect( () => {\r\n        if(!props.isOpen) { // каждый раз при закрытии поп-апа обнуляем поле ввода\r\n            inputRef.current.value = '';\r\n        }\r\n    }, [props.isOpen] )\r\n\r\n    return (\r\n        <PopupWithForm name=\"avatar\" title=\"Обновить аватар\" isOpen={props.isOpen} onSubmit={handleSubmit} onClose={props.onClose}>\r\n            <input id=\"avatar-link-input\" ref={inputRef} type=\"url\" className=\"form__item\" name=\"link\" required placeholder=\"Ссылка на фото\"/>\r\n            <span id=\"avatar-link-input-error\" className=\"form__item-error\"></span>\r\n        </PopupWithForm>\r\n    );\r\n}\r\n\r\nexport default EditAvatarPopup;\r\n","import { useState, useEffect, useContext } from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditProfilePopup(props) {\r\n    // подписка на контекст информации о юзере\r\n    const currentUser = useContext(CurrentUserContext);\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    function handleChangeName(event) {\r\n        setName(event.target.value);\r\n    }\r\n    function handleChangeDescription(event) {\r\n        setDescription(event.target.value);\r\n    }\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        // Передаём значения управляемых компонентов во внешний обработчик\r\n        props.onUpdateUser({\r\n            name: name,\r\n            about: description,\r\n          });\r\n    }\r\n\r\n    // Эффект, вызываемый при монтировании компонента и при обновлении информации о юзере\r\n    useEffect(() => {\r\n        if (currentUser.name) { // избегаем ситуации, когда данные пользователя еще не получены от сервера ( чтобы в стейты не записать undifined)\r\n            setName(currentUser.name);\r\n        }\r\n        if (currentUser.about) {\r\n            setDescription(currentUser.about);\r\n        }\r\n    }, [currentUser, props.isOpen]);\r\n\r\n    return (\r\n        <PopupWithForm name=\"profile\" title=\"Редактировать профиль\" isOpen={props.isOpen} onSubmit={handleSubmit} onClose={props.onClose}>\r\n            <input id=\"name-input\" type=\"text\" value={name} onChange={handleChangeName} className=\"form__item form__item_value_name\" name=\"name\" minLength={2} maxLength={40} required placeholder=\"Имя\"/>\r\n            <span id=\"name-input-error\" className=\"form__item-error\"></span>\r\n            <input id=\"description-input\" type=\"text\" value={description} onChange={handleChangeDescription} className=\"form__item form__item_value_description\" name=\"description\"  minLength={2} maxLength={200} required placeholder=\"О себе\"/>\r\n            <span id=\"description-input-error\" className=\"form__item-error\"></span>\r\n        </PopupWithForm>\r\n    );\r\n}\r\n\r\nexport default EditProfilePopup;\r\n","import { useState, useEffect } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup(props) {\r\n    const [name, setName] = useState('');\r\n    const [link, setLink] = useState('');\r\n\r\n    function handleChangeName (event) {\r\n        setName(event.target.value)\r\n    }\r\n    function handleChangeLink (event) {\r\n        setLink(event.target.value)\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        props.onAddPlace({\r\n            name, // эквивалентно name: name\r\n            link // link: link \r\n        });\r\n    }\r\n\r\n    useEffect( () => {\r\n        if(!props.isOpen) { // каждый раз при закрытии поп-апа обнуляем поля ввода\r\n            setName('');\r\n            setLink('');\r\n        }\r\n    }, [props.isOpen] )\r\n\r\n    return (\r\n        <PopupWithForm name=\"cards\" title=\"Новое место\" isOpen={props.isOpen} onSubmit={handleSubmit} onClose={props.onClose}>\r\n            <input id=\"place-name-input\" type=\"text\" value={name} onChange={handleChangeName} className=\"form__item form__item_value_place-name\" name=\"title\" minLength={2} maxLength={30} required placeholder=\"Название\"/>\r\n            <span id=\"place-name-input-error\" className=\"form__item-error\"></span>\r\n            <input id=\"link-input\" type=\"url\" value={link} onChange={handleChangeLink} className=\"form__item form__item_value_link\" name=\"link\" required placeholder=\"Ссылка на картинку\"/>\r\n            <span id=\"link-input-error\" className=\"form__item-error\"></span>\r\n        </PopupWithForm>\r\n    );\r\n}\r\n\r\nexport default AddPlacePopup;\r\n","function ImagePopup(props) {\r\n    return (\r\n        <div className={`popup popup_type_image ${props.card.isOpen && 'popup_opened'}`}>\r\n            <div className=\"popup__container\">\r\n                <button type=\"button\" aria-label=\"close\" className=\"popup__close-button\" onClick={props.onClose}></button>\r\n                <img className='popup__photo' src={props.card.link} alt=''/>\r\n                <p className=\"popup__photo-name\">{props.card.name}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImagePopup;\r\n","import { useState, useEffect } from 'react';\r\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\r\nimport * as auth from '../utils/auth.js';\r\nimport { api } from '../utils/api';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport ProtectedRoute from './ProtectedRoute';\r\nimport MenuPopup from './MenuPopup';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport InfoTooltip from './InfoTooltip';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport ImagePopup from './ImagePopup';\r\n\r\nfunction App() {\r\n    const history = useHistory();\r\n    const [currentUser, setCurrentUser] = useState({});\r\n    // стейты, касающиеся авторизации\r\n    const [loggedIn, setLoggedIn] = useState(false);\r\n    const [email, setEmail] = useState('');\r\n    const [isInfoTooltipOpen,setIsInfoTooltipOpen] = useState(false);\r\n    const [isRegistrationSuccessful, setRegistrationSuccessful] = useState(false);\r\n    // стейты, касающиеся поп-апов\r\n    const [isMenuPopupOpen, setIsMenuPopupOpen] = useState(false);\r\n    const [isEditAvatarPopupOpen,setIsEditAvatarPopupOpen] = useState(false);\r\n    const [isEditProfilePopupOpen,setIsEditProfilePopupOpen] = useState(false);\r\n    const [isAddPlacePopupOpen,setIsAddPlacePopupOpen] = useState(false);\r\n\r\n    const [selectedCard,setSelectedCard] = useState({isOpen: false, link: '', name: ''});\r\n    const [cards,setCards] = useState([]);\r\n\r\n    // Эффект, вызываемый при монтировании компонента\r\n    useEffect( () => {\r\n        Promise.all([api.getUserInfo(), api.getInitialCards()])\r\n            .then(([dataUserInfo, dataCards]) => {\r\n                // Добавление информации о пользователе с сервера на страницу:\r\n                setCurrentUser(dataUserInfo); // поля объекта: avatar, name, about, _id и cohort\r\n                // Добавление существующих на сервере карточек на страницу:\r\n                setCards(dataCards);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n    }, [] )\r\n\r\n    // Эффект, вызываемый при обновлении статуса, залогинен юзер или нет. Если залогинен - юзер сразу попадает на свой аккаунт + таким образом обновляется почта\r\n    useEffect(() => {\r\n        tokenCheck();\r\n    }, [loggedIn])\r\n\r\n    const handleMenuClick = () => {\r\n        setIsMenuPopupOpen(true);\r\n    };\r\n    const handleEditAvatarClick = () => {\r\n        setIsEditAvatarPopupOpen(true);\r\n    };\r\n    const handleEditProfileClick = () => {\r\n        setIsEditProfilePopupOpen(true);\r\n    };\r\n    const handleAddPlaceClick = () => {\r\n        setIsAddPlacePopupOpen(true);\r\n    };\r\n    const handleCardClick = (card) => {\r\n        setSelectedCard({isOpen: true, link: card.link,name: card.name });\r\n    };\r\n    const closeAllPopups = () => {\r\n        setIsInfoTooltipOpen(false);\r\n        setIsMenuPopupOpen(false);\r\n        setIsEditAvatarPopupOpen(false);\r\n        setIsEditProfilePopupOpen(false);\r\n        setIsAddPlacePopupOpen(false);\r\n        setSelectedCard({isOpen: false});\r\n    }\r\n\r\n    // Регистрация\r\n    const handleRegister = (inputs) => {\r\n        auth.register(inputs)\r\n            .then((data) => {\r\n                if (data) { // если с данными все ок\r\n                    setRegistrationSuccessful(true);\r\n                    setIsInfoTooltipOpen(true); // выводим поп-ап с поздравлением\r\n                    history.push('/sign-in');\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setRegistrationSuccessful(false);\r\n                setIsInfoTooltipOpen(true); // выводим поп-ап с ошибкой\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    // Авторизация\r\n    const handleLogin = (inputs) => {\r\n        auth.authorize(inputs)\r\n            .then((data) => { \r\n                if (data.token) { //проверяем, есть ли у пришедших данных токен\r\n                    localStorage.setItem('jwt', data.token); // сохраняем токен пользователя\r\n                    setLoggedIn(true);\r\n                    history.push('/');\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    // Проверка на наличие токена в локальном хранилище\r\n    const tokenCheck = () => {\r\n        if (localStorage.getItem('jwt')) {\r\n            const jwt = localStorage.getItem('jwt');\r\n            if (jwt) { //если с токеном все ок  \r\n                auth.getContent(jwt)\r\n                .then((data) => {\r\n                    if (data.data.email) { //проверяем, есть ли у пришедших данных емайл\r\n                        setEmail(data.data.email); // заполняем емайл в шапке аккаунта пользователя\r\n                        setLoggedIn(true);\r\n                        history.push('/');\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    // Выход из учетной записи\r\n    const handleSignOut = () => {\r\n        localStorage.removeItem('jwt');\r\n        setIsMenuPopupOpen(false); // закрыть меню для моб. версии\r\n        setLoggedIn(false);\r\n        setEmail('');\r\n        history.push('/sign-in');\r\n    }\r\n\r\n\r\n    // Функции для работы с данными, отображающимися в аккаунте пользователя\r\n\r\n    const handleUpdateUser = (inputs) => {\r\n        api.setUserInfo(inputs)\r\n            .then((updateUser) => {\r\n                setCurrentUser(updateUser);\r\n                closeAllPopups();\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    const handleUpdateAvatar = (inputAvatar) => {\r\n        api.changeAvatar(inputAvatar)\r\n            .then((updateUser) => {\r\n                setCurrentUser(updateUser);\r\n                closeAllPopups();\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    const handleCardLike = (card) => {\r\n        // Проверяем, есть ли уже лайк на этой карточке\r\n        const isLiked = card.likes.some(liker => liker._id === currentUser._id);\r\n        if (!isLiked) {\r\n            api.putLike(card._id)\r\n                .then((newCard) => { // получили данные лайкнутой карточки (лайк уже проставлен)\r\n                    // в cards записываем новый массив, который получен так:\r\n                    // в текущем массиве перебираем карточки и когда id одной из карточек совпадает с id нашей карточки,\r\n                    // менем ее на новую (с лайком)\r\n                    setCards((state) => state.map((item) => item._id === card._id ? newCard : item)); // state - это текущий стейт (т.е необновленный cards)\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                })\r\n\r\n        } else {\r\n            api.deleteLike(card._id)\r\n                .then((newCard) => { //аналогично\r\n                    setCards((state) => state.map((item) => item._id === card._id ? newCard : item));\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                })\r\n        }\r\n    }\r\n\r\n    const handleCardDelete = (card) => {\r\n        // Определяем, являемся ли мы владельцем карточки\r\n        const isOwn = card.owner._id === currentUser._id;\r\n        if (isOwn) {\r\n            api.deleteCard(card._id)\r\n                .then((answer) => {\r\n                    setCards((state) => state.filter((item) => item._id !== card._id));\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                })\r\n        }\r\n    }\r\n\r\n    const handleAddPlaceSubmit = (card) => {\r\n        api.postNewCard(card)\r\n            .then((newCard) => {\r\n                setCards([newCard, ...cards]);\r\n                closeAllPopups();\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    return (\r\n        < CurrentUserContext.Provider value={currentUser}>\r\n            <div className=\"page\">\r\n                <MenuPopup isOpen={isMenuPopupOpen} email={email} onSignOut={handleSignOut}/>\r\n                <Header \r\n                    loggedIn={loggedIn} \r\n                    email={email} \r\n                    onSignOut={handleSignOut}\r\n                    onOpenMenuPopup = {handleMenuClick}\r\n                    onCloseMenuPopup = {closeAllPopups}\r\n                    isMenuPopupOpen = {isMenuPopupOpen}\r\n                />\r\n                <Switch>\r\n                    <ProtectedRoute\r\n                        exact path=\"/\"\r\n                        loggedIn={loggedIn}\r\n                        component={Main} \r\n                        onEditAvatar={handleEditAvatarClick}\r\n                        onEditProfile={handleEditProfileClick}\r\n                        onAddPlace={handleAddPlaceClick} \r\n                        onCardClick={handleCardClick}\r\n                        cards={cards}\r\n                        onCardLike={handleCardLike}\r\n                        onCardDelete={handleCardDelete}\r\n                    />\r\n                    <Route path=\"/sign-in\">\r\n                        <Login onLogin={handleLogin}/>\r\n                    </Route>\r\n                    <Route path=\"/sign-up\">\r\n                        <Register onRegister={handleRegister}/>\r\n                    </Route>\r\n                    <Route>\r\n                        {loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/sign-in\" />}\r\n                    </Route>\r\n                </Switch>\r\n                <Footer/>\r\n\r\n                <InfoTooltip isOpen={isInfoTooltipOpen} isRegistrationSuccessful={isRegistrationSuccessful} onClose={closeAllPopups}/>\r\n\r\n                <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onUpdateAvatar={handleUpdateAvatar} onClose={closeAllPopups}/>\r\n                <EditProfilePopup isOpen={isEditProfilePopupOpen} onUpdateUser={handleUpdateUser} onClose={closeAllPopups}/>\r\n                <AddPlacePopup  isOpen={isAddPlacePopupOpen} onAddPlace={handleAddPlaceSubmit} onClose={closeAllPopups}/>\r\n\r\n                <PopupWithForm name=\"confirm\" title=\"Вы уверены?\"/>\r\n\r\n                <ImagePopup card={selectedCard} onClose={closeAllPopups}/>\r\n            </div>\r\n        </CurrentUserContext.Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}